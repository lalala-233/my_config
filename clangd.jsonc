{
    "aa": [
        // 全局补全（会自动补充头文件）
        "--all-scopes-completion",
        // 在后台自动分析文件（基于 complie_commands)
        "--background-index",
        // 启用 clang-tidy 功能
        "--clang-tidy",
        // 更详细的补全内容
        "--completion-style=detailed",
        // 默认格式化风格: 谷歌开源项目代码指南（可用的有 LLVM, Google, Chromium, Mozilla, Webkit, Microsoft, GNU 等）
        "--fallback-style=Google",
        /*
        从 YAML 文件中读取用户和项目配置。
        项目配置来自项目目录中的 .clangd 文件。
        用户配置来自以下目录中的 clangd/config.yaml：
        Windows： %USERPROFILE%AppDataLocal
        Mac OS： ~/Library/Preferences/
        其他：$XDG_CONFIG_HOME，通常为 ~/.config
        */
        "--enable-config",
        // 启用这项时，补全函数时，将会给参数提供占位符，键入后按 Tab 可以切换到下一占位符，乃至函数末
        "--function-arg-placeholders=true",
        // 输入建议中，已包含头文件的项与还未包含头文件的项会以圆点加以区分
        "--header-insertion-decorators",
        // 允许补充头文件
        "--header-insertion=iwyu",
        // 为标准库头文件启用清理功能(不成熟!!!)
        "--include-cleaner-stdlib",
        // 同时开启的任务数量
        "-j=4",
        // 让 Clangd 生成更详细的日志
        "--log=verbose",
        // pch优化的位置（memory 或 disk，选择memory会增加内存开销，但会提升性能)
        "--pch-storage=memory",
        // 输出的 JSON 文件更美观
        "--pretty",
        // 指定 clang 的位置，不指定则用默认
        // "--query-driver=/usr/bin/clang++",
        // 建议排序模型：heuristics 和 decision_forest
        "--ranking-model=heuristics"
    ]
}